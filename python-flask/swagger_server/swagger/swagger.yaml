openapi: 3.0.0
info:
  title: 'PICKY: Python ICinga2 to KeYbase'
  description: A Bridge between Icinga2 Notifications and Keybase
  version: 1.4.1
servers:
- url: https://localhost/
paths:
  /:
    get:
      tags:
      - Channels
      summary: Get all channels
      description: Get all channels
      operationId: get_channels
      responses:
        "200":
          description: Successfully got all channels
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/channel'
                x-content-type: application/json
      x-swagger-router-controller: swagger_server.controllers.channels_controller
      x-openapi-router-controller: swagger_server.controllers.channels_controller
  /{channel}:
    get:
      tags:
      - Hosts
      summary: Get all hosts in a channel
      description: Get all hosts in a channel
      operationId: get_hosts
      parameters:
      - name: channel
        in: path
        description: Name of the channel to get all the hosts
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successfully read host from channel
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/host'
                x-content-type: application/json
      x-swagger-router-controller: swagger_server.controllers.hosts_controller
      x-openapi-router-controller: swagger_server.controllers.hosts_controller
    put:
      tags:
      - Channels
      summary: Add a channel
      description: Add a channel
      operationId: put_channel
      parameters:
      - name: channel
        in: path
        description: Name of the channel
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/channel'
      responses:
        "200":
          description: Successfully added a channel
      x-swagger-router-controller: swagger_server.controllers.channels_controller
      x-openapi-router-controller: swagger_server.controllers.channels_controller
  /{channel}/{host}:
    get:
      tags:
      - Services
      summary: Get all services of a host
      description: Get all services of a host
      operationId: get_services
      parameters:
      - name: channel
        in: path
        description: Name of the channel
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: host
        in: path
        description: Name of the host
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successfully read services from a host
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/service'
                x-content-type: application/json
      x-swagger-router-controller: swagger_server.controllers.services_controller
      x-openapi-router-controller: swagger_server.controllers.services_controller
    put:
      tags:
      - Hosts
      summary: Host notification
      description: Host notification
      operationId: put_host
      parameters:
      - name: channel
        in: path
        description: Name of the channel
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: host
        in: path
        description: Name of the host
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/host'
      responses:
        "200":
          description: Successfully alerted a host
      x-swagger-router-controller: swagger_server.controllers.hosts_controller
      x-openapi-router-controller: swagger_server.controllers.hosts_controller
  /{channel}/{host}/{service}:
    put:
      tags:
      - Services
      summary: Service notification
      description: Service notification
      operationId: put_service
      parameters:
      - name: channel
        in: path
        description: Name of the channel
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: host
        in: path
        description: Name of the host
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: service
        in: path
        description: Name of the service
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/service'
      responses:
        "200":
          description: Successfully alerted a service
      x-swagger-router-controller: swagger_server.controllers.services_controller
      x-openapi-router-controller: swagger_server.controllers.services_controller
components:
  schemas:
    channel:
      type: object
      properties:
        name:
          type: string
          description: Keybase topic (channel) name
        hosts:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/host'
        timestamp:
          type: string
          description: Last update
        url:
          type: string
          description: Link to this object
      example:
        hosts:
        - name: hostname.example.com
          msg_id: 0
          state: DOWN
          output: some output of the host check
        - name: hostname.example.com
          msg_id: 0
          state: DOWN
          output: some output of the host check
        name: name
        url: url
        timestamp: timestamp
    host:
      type: object
      properties:
        name:
          type: string
          description: Name of host
        msg_id:
          type: integer
          description: Message ID in the channel
          default: 0
        state:
          type: string
          default: UP
          enum:
          - UP
          - DOWN
        output:
          type: string
          description: Output of host check command
          default: ""
        services:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/service'
        timestamp:
          type: string
          description: Last update
        sla:
          type: string
          default: bronze
          enum:
          - gold
          - silver
          - bronze
        picky:
          type: string
          description: Message neatly formatted for Keybase
        url:
          type: string
          description: Link to this object
      example:
        name: hostname.example.com
        msg_id: 0
        state: DOWN
        output: some output of the host check
    service:
      type: object
      properties:
        name:
          type: string
          description: Short name of the service
        state:
          type: string
          default: OK
          enum:
          - OK
          - WARNING
          - CRITICAL
          - UNKNOWN
        output:
          type: string
          description: Output of service check command
          default: ""
        timestamp:
          type: string
          description: Last update
        sla:
          type: string
          default: bronze
          enum:
          - gold
          - silver
          - bronze
        picky:
          type: string
          description: Stub neatly formatted for Keybase
        url:
          type: string
          description: Link to this object
      example:
        name: https
        state: OK
        output: some output of the service check

