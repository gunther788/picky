openapi: 3.0.0
info:
  title: 'PICKY: Python ICinga2 to KeYbase'
  description: A Bridge between Icinga2's Notifications and Keybase
  version: 1.0.3
servers:
- url: https://localhost/
paths:
  /channels:
    get:
      tags:
      - Channels
      summary: Read the entire channels list
      description: Read the channels lists
      operationId: channels_read_all
      parameters:
      - name: length
        in: query
        description: Number of channels to get from channels
        required: false
        style: form
        explode: true
        schema:
          type: integer
      - name: offset
        in: query
        description: Offset from beginning of list where to start gathering channels
        required: false
        style: form
        explode: true
        schema:
          type: integer
      responses:
        "200":
          description: Successfully read channel list operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/channel'
                x-content-type: application/json
      x-swagger-router-controller: swagger_server.controllers.channels_controller
      x-openapi-router-controller: swagger_server.controllers.channels_controller
    post:
      tags:
      - Channels
      summary: Create a channel and add it to the channels list
      description: Create a new channel in the channels list
      operationId: channels_create
      requestBody:
        description: Channel to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/channel'
        required: true
      responses:
        "201":
          description: Successfully created a channel in list
      x-swagger-router-controller: swagger_server.controllers.channels_controller
      x-openapi-router-controller: swagger_server.controllers.channels_controller
  /channels/{name}:
    get:
      tags:
      - Channels
      summary: Read one channel from the channels list
      description: Read one channel from the channels list
      operationId: channels_read_one
      parameters:
      - name: name
        in: path
        description: Name of the channel to get from the list
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successfully read channel from channels list operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/channel'
      x-swagger-router-controller: swagger_server.controllers.channels_controller
      x-openapi-router-controller: swagger_server.controllers.channels_controller
    put:
      tags:
      - Channels
      summary: Update a channel in the channels list
      description: Update a channel in the channels list
      operationId: channels_update
      parameters:
      - name: name
        in: path
        description: Name of the channel to update in the list
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/channel'
      responses:
        "200":
          description: Successfully updated channel in channels list
      x-swagger-router-controller: swagger_server.controllers.channels_controller
      x-openapi-router-controller: swagger_server.controllers.channels_controller
    delete:
      tags:
      - Channels
      summary: Delete a channel from the channels list
      description: Delete a channel
      operationId: channels_delete
      parameters:
      - name: name
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successfully deleted a channel from channels list
      x-swagger-router-controller: swagger_server.controllers.channels_controller
      x-openapi-router-controller: swagger_server.controllers.channels_controller
  /hosts:
    get:
      tags:
      - Hosts
      summary: Read the entire hosts list
      description: Read the hosts list
      operationId: hosts_read_all
      parameters:
      - name: length
        in: query
        description: Number of hosts to get from hosts
        required: false
        style: form
        explode: true
        schema:
          type: integer
      - name: offset
        in: query
        description: Offset from beginning of list where to start gathering hosts
        required: false
        style: form
        explode: true
        schema:
          type: integer
      responses:
        "200":
          description: Successfully read hosts list operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/host'
                x-content-type: application/json
      x-swagger-router-controller: swagger_server.controllers.hosts_controller
      x-openapi-router-controller: swagger_server.controllers.hosts_controller
    post:
      tags:
      - Hosts
      summary: Create a host and add it to the hosts list
      description: Create a new host in the hosts list
      operationId: hosts_create
      requestBody:
        description: Host to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/host'
        required: true
      responses:
        "201":
          description: Successfully created host in list
      x-swagger-router-controller: swagger_server.controllers.hosts_controller
      x-openapi-router-controller: swagger_server.controllers.hosts_controller
  /hosts/{name}:
    get:
      tags:
      - Hosts
      summary: Read one host from the hosts list
      description: Read one host from the hosts list
      operationId: hosts_read_one
      parameters:
      - name: name
        in: path
        description: Name of the host to get from the list
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successfully read host from hosts list operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/host'
      x-swagger-router-controller: swagger_server.controllers.hosts_controller
      x-openapi-router-controller: swagger_server.controllers.hosts_controller
    put:
      tags:
      - Hosts
      summary: Update a host in the hosts list
      description: Update a host in the hosts list
      operationId: hosts_update
      parameters:
      - name: name
        in: path
        description: Name of the host to update in the list
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/host'
      responses:
        "200":
          description: Successfully updated host in hosts list
      x-swagger-router-controller: swagger_server.controllers.hosts_controller
      x-openapi-router-controller: swagger_server.controllers.hosts_controller
    delete:
      tags:
      - Hosts
      summary: Delete a host from the hosts list
      description: Delete a host
      operationId: hosts_delete
      parameters:
      - name: name
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successfully deleted a host from hosts list
      x-swagger-router-controller: swagger_server.controllers.hosts_controller
      x-openapi-router-controller: swagger_server.controllers.hosts_controller
    patch:
      tags:
      - Hosts
      summary: Rebuild the services list of a host
      description: Rebuild the services list of a host
      operationId: hosts_patch
      parameters:
      - name: name
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successfully updated a host in hosts list
      x-swagger-router-controller: swagger_server.controllers.hosts_controller
      x-openapi-router-controller: swagger_server.controllers.hosts_controller
  /services:
    get:
      tags:
      - Services
      summary: Read the entire services list
      description: Read the services list
      operationId: services_read_all
      parameters:
      - name: length
        in: query
        description: Number of services to get from services
        required: false
        style: form
        explode: true
        schema:
          type: integer
      - name: offset
        in: query
        description: Offset from beginning of list where to start gathering services
        required: false
        style: form
        explode: true
        schema:
          type: integer
      responses:
        "200":
          description: Successfully read services list operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/service'
                x-content-type: application/json
      x-swagger-router-controller: swagger_server.controllers.services_controller
      x-openapi-router-controller: swagger_server.controllers.services_controller
    post:
      tags:
      - Services
      summary: Create a service and add it to the services list
      description: Create a new service in the services list
      operationId: services_create
      requestBody:
        description: Service to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/service'
        required: true
      responses:
        "201":
          description: Successfully created service in list
      x-swagger-router-controller: swagger_server.controllers.services_controller
      x-openapi-router-controller: swagger_server.controllers.services_controller
  /services/{name}:
    get:
      tags:
      - Services
      summary: Read one service from the services list
      description: Read one service from the services list
      operationId: services_read_one
      parameters:
      - name: name
        in: path
        description: Name of the service to get from the list
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successfully read service from services list operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service'
      x-swagger-router-controller: swagger_server.controllers.services_controller
      x-openapi-router-controller: swagger_server.controllers.services_controller
    put:
      tags:
      - Services
      summary: Update a service in the services list
      description: Update a service in the services list
      operationId: services_update
      parameters:
      - name: name
        in: path
        description: Name of the service to update in the list
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/service'
      responses:
        "200":
          description: Successfully updated service in services list
      x-swagger-router-controller: swagger_server.controllers.services_controller
      x-openapi-router-controller: swagger_server.controllers.services_controller
    delete:
      tags:
      - Services
      summary: Delete a service from the services list
      description: Delete a service
      operationId: services_delete
      parameters:
      - name: name
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successfully deleted a service from services list
      x-swagger-router-controller: swagger_server.controllers.services_controller
      x-openapi-router-controller: swagger_server.controllers.services_controller
components:
  schemas:
    channel:
      type: object
      properties:
        name:
          type: string
          description: Name of channel
        timestamp:
          type: string
          description: Last update
      example:
        name: webservers
        timestamp: timestamp
    host:
      type: object
      properties:
        name:
          type: string
          description: Name of host to create
        messages:
          type: object
          additionalProperties:
            type: integer
        state:
          type: string
          default: UP
          enum:
          - UP
          - DOWN
        output:
          type: string
          default: ""
          description: Output of host check command
        timestamp:
          type: string
          description: Last update
      example:
        messages:
          webservers: 0
          production: 0
        name: hostname.example.com
        state: UP
        timestamp: timestamp
    service:
      type: object
      properties:
        name:
          type: string
          description: Name of service, host!service format
        host:
          type: string
          description: Host this service runs on
        service:
          type: string
          description: Short name of the service
        timestamp:
          type: string
          description: Last update
        state:
          type: string
          default: OK
          enum:
          - OK
          - WARNING
          - CRITICAL
          - UNKNOWN
        output:
          type: string
          default: ""
          description: Output of service check command
      example:
        service: https
        name: hostname.example.com!https
        host: hostname.example.com
        state: OK
        timestamp: timestamp
