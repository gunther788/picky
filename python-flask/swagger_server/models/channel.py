# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.host import Host  # noqa: F401,E501
from swagger_server import util


class Channel(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, name: str=None, hosts: Dict[str, Host]=None, timestamp: str=None, url: str=None):  # noqa: E501
        """Channel - a model defined in Swagger

        :param name: The name of this Channel.  # noqa: E501
        :type name: str
        :param hosts: The hosts of this Channel.  # noqa: E501
        :type hosts: Dict[str, Host]
        :param timestamp: The timestamp of this Channel.  # noqa: E501
        :type timestamp: str
        :param url: The url of this Channel.  # noqa: E501
        :type url: str
        """
        self.swagger_types = {
            'name': str,
            'hosts': Dict[str, Host],
            'timestamp': str,
            'url': str
        }

        self.attribute_map = {
            'name': 'name',
            'hosts': 'hosts',
            'timestamp': 'timestamp',
            'url': 'url'
        }
        self._name = name
        self._hosts = hosts
        self._timestamp = timestamp
        self._url = url

    @classmethod
    def from_dict(cls, dikt) -> 'Channel':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The channel of this Channel.  # noqa: E501
        :rtype: Channel
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self) -> str:
        """Gets the name of this Channel.

        Keybase topic (channel) name  # noqa: E501

        :return: The name of this Channel.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: str):
        """Sets the name of this Channel.

        Keybase topic (channel) name  # noqa: E501

        :param name: The name of this Channel.
        :type name: str
        """

        self._name = name

    @property
    def hosts(self) -> Dict[str, Host]:
        """Gets the hosts of this Channel.


        :return: The hosts of this Channel.
        :rtype: Dict[str, Host]
        """
        return self._hosts

    @hosts.setter
    def hosts(self, hosts: Dict[str, Host]):
        """Sets the hosts of this Channel.


        :param hosts: The hosts of this Channel.
        :type hosts: Dict[str, Host]
        """

        self._hosts = hosts

    @property
    def timestamp(self) -> str:
        """Gets the timestamp of this Channel.

        Last update  # noqa: E501

        :return: The timestamp of this Channel.
        :rtype: str
        """
        return self._timestamp

    @timestamp.setter
    def timestamp(self, timestamp: str):
        """Sets the timestamp of this Channel.

        Last update  # noqa: E501

        :param timestamp: The timestamp of this Channel.
        :type timestamp: str
        """

        self._timestamp = timestamp

    @property
    def url(self) -> str:
        """Gets the url of this Channel.

        Link to this object  # noqa: E501

        :return: The url of this Channel.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url: str):
        """Sets the url of this Channel.

        Link to this object  # noqa: E501

        :param url: The url of this Channel.
        :type url: str
        """

        self._url = url
